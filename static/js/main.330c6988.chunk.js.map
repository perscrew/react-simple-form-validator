{"version":3,"sources":["../../../lib/esm/messages/defaultMessages.js","../../../lib/esm/rules/defaultRules.js","../../../lib/esm/models/guards.js","../../../lib/esm/services/validator-service.js","../../../lib/esm/utils/error-utils.js","../../../lib/esm/use-validation.js","../../../lib/esm/ValidationComponent.js","../../../lib/esm/index.js","components/ClassForm.tsx","components/FunctionForm.tsx","layout/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx","layout/Layout.module.css"],"names":["defaultMessages","en","numbers","email","required","date","minlength","maxlength","equalPassword","hasUpperCase","hasLowerCase","hasNumber","hasSpecialCharacter","ar","fr","fa","id","ptBR","es","tr","it","defaultRules","format","value","d","dayjs","isValid","length","dataToCompare","isValidatorRegExp","rule","RegExp","isRuleValueForFunction","ruleValue","isNaN","ValidatorServiceImpl","state","locale","ruleList","messageList","labels","this","errors","messages","prototype","validate","fields","resetErrors","_i","_a","Object","keys","fieldName","rules","checkRules","isFormValid","ruleKeys_1","ruleKey","validator","test","addError","name","errMsg","replace","toString","error","filter","err","index","indexOf","push","failedRules","ErrorUtils","isFieldInError","getFailedRules","reduce","acc","getFailedRulesInField","_b","getErrorsForField","find","getErrorsInField","getErrorMessages","separator","map","join","useValidation","props","_c","_d","_e","fieldRules","fieldsRules","baseRules","result","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","apply","ValidationComponent","_super","_this","newState","validation","validatorService","setState","Component","ClassForm","civility","firstName","lastName","touchedFields","event","field","preventDefault","console","log","onSubmit","formSubmitHandler","bind","className","htmlFor","type","onChange","e","target","onBlur","onBlurHandler","placeholder","disabled","FunctionForm","useState","setTouchedFields","setEmail","setFirstName","setLastName","setCivility","customCivilityRule","prevFields","Layout","styles","layout","nav","to","isActive","active","fieldsValidation","App","basename","process","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.330c6988.chunk.js","sourcesContent":["var defaultMessages = {\n    // English language - Used by default\n    en: {\n        numbers: 'The field \"{0}\" must be a valid number.',\n        email: 'The field \"{0}\" must be a valid email address.',\n        required: 'The field \"{0}\" is mandatory.',\n        date: 'The field \"{0}\" must be a valid date ({1}).',\n        minlength: 'The field \"{0}\" length must be greater than {1}.',\n        maxlength: 'The field \"{0}\" length must be lower than {1}.',\n        equalPassword: 'Passwords are different.',\n        hasUpperCase: 'The field \"{0}\" must contain a upper case.',\n        hasLowerCase: 'The field \"{0}\" must contain a lower case.',\n        hasNumber: 'The field \"{0}\" must contain a number.',\n        hasSpecialCharacter: 'The field \"{0}\" must contain a special character.'\n    },\n    //Arabic language\n    ar: {\n        numbers: 'الحقل \"{0}\" يجب أن يكون رقم صحيح',\n        email: 'الحقل \"{0}\" يجب أن يكون بريد إلكتروني صحيح',\n        required: 'الحقل \"{0}\" مطلوب',\n        date: 'الحقل \"{0}\" يجب أن يكون تاريخ صحيح ({1}).',\n        minlength: 'الحقل \"{0}\" يجب أن يكون أكثر من {1}.',\n        maxlength: 'الحقل \"{0}\" يجب أن يكون أقل من {1}.',\n        equalPassword: 'كلمات المرور مختلفة.',\n        hasNumber: 'يجب أن يحتوي الحقل \"{0}\" على رقم.',\n        hasUpperCase: 'يجب أن يحتوي الحقل \"{0}\" على حرف كبير',\n        hasLowerCase: 'يجب أن يحتوي الحقل \"{0}\" على أحرف صغيرة',\n        hasSpecialCharacter: 'يجب أن يحتوي الحقل \"{0}\" على رمز خاص'\n    },\n    // French language\n    fr: {\n        numbers: 'Le champ \"{0}\" doit être un nombre valide.',\n        email: 'Le champ \"{0}\" doit être une adresse email valide.',\n        required: 'Le champ \"{0}\" est obligatoire.',\n        date: 'Le champ \"{0}\" doit correspondre à une date valide ({1}).',\n        minlength: 'Le nombre de caractère du champ \"{0}\" doit être supérieur à {1}.',\n        maxlength: 'Le nombre de caractère du champ \"{0}\" doit être inférieur à {1}.',\n        equalPassword: 'Les mots de passes sont differents',\n        hasNumber: 'Le champ \"{0}\" doit contenir un chiffre.',\n        hasUpperCase: 'Le champ \"{0}\" doit contenir une majuscule',\n        hasLowerCase: 'Le champ \"{0}\" doit contenir une minuscule',\n        hasSpecialCharacter: 'Le champ \"{0}\" doit contenir un caractère spécial'\n    },\n    // Persian (Farsi) language\n    fa: {\n        numbers: 'فیلد \"{0}\" باید یک عدد باشد.',\n        email: 'فیلد \"{0}\" باید یک آدرس ایمیل باشد.',\n        required: 'فیلد \"{0}\" نباید خالی باشد.',\n        date: 'فیلد \"{0}\" باید یک تاریخ ({1}) باشد.',\n        minlength: 'طول فیلد \"{0}\" باید بیشتر از \"{1}\" باشد.',\n        maxlength: 'طول فیلد \"{0}\" باید کمتر از \"{1}\" باشد.',\n        equalPassword: 'رمزهای عبور متفاوت هستند',\n        hasNumber: 'قسمت \"{0}\" باید حاوی یک عدد باشد.',\n        hasUpperCase: 'قسمت \"{0}\" باید شامل یک حرف بزرگ باشد',\n        hasLowerCase: 'قسمت \"{0}\" باید دارای حروف کوچک باشد',\n        hasSpecialCharacter: 'قسمت \"{0}\" باید دارای یک نویسه خاص باشد'\n    },\n    // Indonesian language\n    id: {\n        numbers: '\"{0}\" harus berupa angka',\n        email: 'Format email pada \"{0}\" harus valid',\n        required: '\"{0}\" harus diisi',\n        date: 'Format tanggal pada \"{0}\" harus ({1})',\n        minlength: '\"{0}\" harus lebih dari {1} karakter',\n        maxlength: '\"{0}\" harus kurang dari {1} karakter',\n        equalPassword: 'Kata sandi berbeda',\n        hasNumber: '\"{0}\" harus berisi angka.',\n        hasUpperCase: '\"{0}\" harus mengandung huruf kapital',\n        hasLowerCase: '\"{0}\" harus berisi huruf kecil',\n        hasSpecialCharacter: '\"{0}\" harus berisi karakter khusus'\n    },\n    // Portuguese language of Brazil\n    ptBR: {\n        numbers: 'O campo \"{0}\" precisar conter um número válido.',\n        email: 'O campo \"{0}\" precisa conter um email válido.',\n        required: 'O campo \"{0}\" é obrigatório.',\n        date: 'O campo \"{0}\" precisa conter uma data válida ({1}).',\n        minlength: 'O campo \"{0}\" precisa ser maior que {1} caracteres.',\n        maxlength: 'O campo \"{0}\" precisa ser menor que {1} caracteres.',\n        equalPassword: 'As senhas são diferentes',\n        hasNumber: 'O campo \"{0}\" deve conter um número.',\n        hasUpperCase: 'O campo \"{0}\" deve conter uma letra maiúscula',\n        hasLowerCase: 'O campo \"{0}\" deve conter letras minúsculas',\n        hasSpecialCharacter: 'O campo \"{0}\" deve conter um caractere especial'\n    },\n    // Spanish language\n    es: {\n        numbers: 'El campo \"{0}\" debe ser un número válido.',\n        email: 'El campo \"{0}\" debe ser un email válido.',\n        required: 'El campo \"{0}\" es requerido.',\n        date: 'El campo \"{0}\" debe contener una fecha válida ({1}).',\n        minlength: 'La longitud del campo \"{0}\" debe ser mayor que {1} caracteres',\n        maxlength: 'La longitud del campo \"{0}\" debe ser menor que {1} caracteres.',\n        equalPassword: 'Las contraseñas son diferentes',\n        hasNumber: 'El campo \"{0}\" debe contener un número.',\n        hasUpperCase: 'El campo \"{0}\" debe contener una letra mayúscula',\n        hasLowerCase: 'El campo \"{0}\" debe contener minúsculas',\n        hasSpecialCharacter: 'El campo \"{0}\" debe contener un carácter especial'\n    },\n    // Turkish language - Used by default\n    tr: {\n        numbers: '\"{0}\" alanı geçerli bir sayı olmalıdır.',\n        email: '\"{0}\" alanı geçerli bir email adresi olmalıdır.',\n        required: '\"{0}\" alanı gereklidir.',\n        date: '\"{0}\" alanı geçerli bir tarih olmalıdır. ({1}).',\n        minlength: '\"{0}\" alanı {1} karakterden daha uzun olmalıdır.',\n        maxlength: '\"{0}\" alanı {1} karakterden daha kısa olmalıdır.',\n        equalPassword: 'Şifreler farklı',\n        hasNumber: '\"{0}\" alanı bir sayı içermelidir.',\n        hasUpperCase: '\"{0}\" alanı büyük harf içermelidir',\n        hasLowerCase: '\"{0}\" alanı küçük harf içermelidir',\n        hasSpecialCharacter: '\"{0}\" alanı özel bir karakter içermelidir'\n    },\n    it: {\n        numbers: 'Il campo \"{0}\" deve contenere solo numeri.',\n        email: 'Il campo \"{0}\" deve contenere un indirizzo email valido.',\n        required: 'Il campo \"{0}\" é obbligatorio.',\n        date: 'Il campo \"{0}\" deve contenere una data valida ({1}).',\n        minlength: 'Il campo \"{0}\" deve contenere almeno {1} caratteri.',\n        maxlength: 'Il campo \"{0}\" deve contenere meno di {1} caratteri.',\n        equalPassword: 'Le passwords inserite sono differenti',\n        hasUpperCase: 'Il campo \"{0}\" deve contenere una maiuscola',\n        hasLowerCase: 'Il campo \"{0}\" deve contenere una minuscola',\n        hasNumber: 'Il campo \"{0}\" deve contenere un numero',\n        hasSpecialCharacter: 'Il campo \"{0}\" deve contenere un carattere speciale'\n    }\n    // TODO Add other languages here...\n};\nexport default defaultMessages;\n","import dayjs from 'dayjs';\n// Custom default rules to validate form fields\nvar defaultRules = {\n    numbers: /^(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\n    email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    required: /\\S+/,\n    hasNumber: /\\d/,\n    hasUpperCase: /(?=.*[A-Z])/,\n    hasLowerCase: /(?=.*[a-z])/,\n    hasSpecialCharacter: /(\\W)/,\n    date: function (format, value) {\n        if (format === void 0) { format = 'YYYY-MM-DD'; }\n        var d = dayjs(value, format);\n        if (d == null || !d.isValid())\n            return false;\n        return true;\n    },\n    minlength: function (length, value) {\n        if (length === void 0) {\n            throw 'ERROR: It is not a valid length, checkout your minlength settings.';\n        }\n        else if (value.length >= length) {\n            return true;\n        }\n        return false;\n    },\n    maxlength: function (length, value) {\n        if (length === void 0) {\n            throw 'ERROR: It is not a valid length, checkout your maxlength settings.';\n        }\n        else if (value.length > length) {\n            return false;\n        }\n        return true;\n    },\n    equalPassword: function (dataToCompare, value) {\n        return dataToCompare === value;\n    }\n};\nexport default defaultRules;\n","export function isValidatorFn(rule) {\n    return typeof rule === 'function';\n}\nexport function isValidatorRegExp(rule) {\n    return rule instanceof RegExp;\n}\nexport function isRuleValueForFunction(ruleValue) {\n    return typeof ruleValue === 'string' || !isNaN(+ruleValue);\n}\n","import { isRuleValueForFunction, isValidatorFn, isValidatorRegExp } from '../models/guards';\n/**\n * Class which contains the form validation logic.\n */\nvar ValidatorServiceImpl = /** @class */ (function () {\n    function ValidatorServiceImpl(state, locale, ruleList, messageList, labels) {\n        this.state = state;\n        this.locale = locale;\n        this.ruleList = ruleList;\n        this.messageList = messageList;\n        this.labels = labels;\n        this.errors = [];\n        this.messages = this.messageList[this.locale];\n    }\n    /**\n     * Method used to validate a concrete form state with a specific validation.\n     * @param fields - fields with custom validation\n     * @returns - form validation result object\n     */\n    ValidatorServiceImpl.prototype.validate = function (fields) {\n        this.resetErrors();\n        if (!fields)\n            return { isValid: true, errors: this.errors };\n        for (var _i = 0, _a = Object.keys(this.state); _i < _a.length; _i++) {\n            var fieldName = _a[_i];\n            var rules = fields[fieldName];\n            rules && this.checkRules(fieldName, rules, this.state[fieldName]);\n        }\n        return { isValid: this.isFormValid(), errors: this.errors };\n    };\n    /**\n     * Use tod check rules associated to a form field.\n     * @param fieldName - form field name\n     * @param rules - rules associated to field\n     * @param value - current form value\n     */\n    ValidatorServiceImpl.prototype.checkRules = function (fieldName, rules, value) {\n        // if value is empty and is not required by the rules, no need to check any other rules\n        if (!value && !rules.required) {\n            return;\n        }\n        var ruleKeys = Object.keys(rules);\n        for (var _i = 0, ruleKeys_1 = ruleKeys; _i < ruleKeys_1.length; _i++) {\n            var ruleKey = ruleKeys_1[_i];\n            var validator = this.ruleList[ruleKey];\n            var ruleValue = rules[ruleKey];\n            var isValid = true;\n            if (ruleValue) {\n                if (isValidatorFn(validator) && isRuleValueForFunction(ruleValue)) {\n                    var validatorFn = validator;\n                    isValid = validatorFn(ruleValue, value);\n                }\n                else if (isValidatorRegExp(validator)) {\n                    isValid = validator.test(value);\n                }\n                !isValid && this.addError(fieldName, ruleKey, ruleValue);\n            }\n        }\n    };\n    /**\n     * Used to update errors.\n     * @param fieldName - form field name\n     * @param rule - rules associated to field\n     * @param value - current form value\n     */\n    ValidatorServiceImpl.prototype.addError = function (fieldName, rule, value) {\n        var name = this.labels[fieldName];\n        value = rule == 'minlength' ? +value - 1 : +value;\n        var errMsg = this.messages[rule].replace('{0}', name !== null && name !== void 0 ? name : fieldName).replace('{1}', value.toString());\n        var error = this.errors.filter(function (err) { return err.fieldName === fieldName; })[0];\n        if (error) {\n            var index = this.errors.indexOf(error);\n            error.messages.push(errMsg);\n            error.failedRules.push(rule);\n            this.errors[index] = error;\n        }\n        else {\n            this.errors.push({\n                fieldName: fieldName,\n                failedRules: [rule],\n                messages: [errMsg]\n            });\n        }\n    };\n    /**\n     * Used to reset errors\n     */\n    ValidatorServiceImpl.prototype.resetErrors = function () {\n        this.errors = [];\n    };\n    /**\n     * Check if form is valid\n     * @returns - form validity\n     */\n    ValidatorServiceImpl.prototype.isFormValid = function () {\n        return !this.errors.length;\n    };\n    return ValidatorServiceImpl;\n}());\nexport { ValidatorServiceImpl };\n","var ErrorUtils = /** @class */ (function () {\n    function ErrorUtils() {\n    }\n    ErrorUtils.isFieldInError = function (errors, fieldName) {\n        return errors.filter(function (err) { return err.fieldName === fieldName; }).length > 0;\n    };\n    ErrorUtils.getFailedRules = function (errors) {\n        return errors.reduce(function (acc, error) {\n            acc[error.fieldName] = error.failedRules;\n            return acc;\n        }, {});\n    };\n    ErrorUtils.getFailedRulesInField = function (errors, fieldName) {\n        var _a, _b;\n        return (_b = (_a = ErrorUtils.getErrorsForField(errors, fieldName)) === null || _a === void 0 ? void 0 : _a.failedRules) !== null && _b !== void 0 ? _b : [];\n    };\n    ErrorUtils.getErrorsForField = function (errors, fieldName) {\n        return errors.find(function (err) { return err.fieldName === fieldName; });\n    };\n    ErrorUtils.getErrorsInField = function (errors, fieldName) {\n        var _a, _b;\n        return (_b = (_a = ErrorUtils.getErrorsForField(errors, fieldName)) === null || _a === void 0 ? void 0 : _a.messages) !== null && _b !== void 0 ? _b : [];\n    };\n    ErrorUtils.getErrorMessages = function (errors, separator) {\n        if (separator === void 0) { separator = '\\n'; }\n        return errors.map(function (err) { return err.messages.join(separator); }).join(separator);\n    };\n    return ErrorUtils;\n}());\nexport { ErrorUtils };\n","import defaultMessages from './messages/defaultMessages';\nimport defaultRules from './rules/defaultRules';\nimport { ValidatorServiceImpl } from './services/validator-service';\nimport { ErrorUtils } from './utils/error-utils';\nvar useValidation = function (props) {\n    var _a, _b, _c, _d;\n    var isFormValid = false;\n    var errors = [];\n    var _e = props.state, state = _e === void 0 ? {} : _e;\n    var fieldRules = props.fieldsRules;\n    var locale = (_a = props.locale) !== null && _a !== void 0 ? _a : 'en';\n    var baseRules = (_b = props.rules) !== null && _b !== void 0 ? _b : defaultRules;\n    var messages = (_c = props.messages) !== null && _c !== void 0 ? _c : defaultMessages;\n    var labels = (_d = props.labels) !== null && _d !== void 0 ? _d : {};\n    var validatorService = new ValidatorServiceImpl(state, locale, baseRules, messages, labels);\n    // function component is re-rendered if props or any use state vars is updated, so we trigger validation on each updates\n    var result = validatorService.validate(fieldRules);\n    errors = result.errors;\n    isFormValid = result.isValid;\n    var isFieldInError = function (fieldName) { return ErrorUtils.isFieldInError(errors, fieldName); };\n    var getFailedRules = function () { return ErrorUtils.getFailedRules(errors); };\n    var getErrorsForField = function (fieldName) { return ErrorUtils.getErrorsForField(errors, fieldName); };\n    var getErrorsInField = function (fieldName) { return ErrorUtils.getErrorsInField(errors, fieldName); };\n    var getErrorMessages = function (separator) {\n        if (separator === void 0) { separator = '\\n'; }\n        return ErrorUtils.getErrorMessages(errors, separator);\n    };\n    var getFailedRulesInField = function (fieldName) { return ErrorUtils.getFailedRulesInField(errors, fieldName); };\n    return {\n        isFormValid: isFormValid,\n        isFieldInError: isFieldInError,\n        getFailedRules: getFailedRules,\n        getFailedRulesInField: getFailedRulesInField,\n        getErrorMessages: getErrorMessages,\n        getErrorsForField: getErrorsForField,\n        getErrorsInField: getErrorsInField\n    };\n};\nexport default useValidation;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Component } from 'react';\nimport defaultMessages from './messages/defaultMessages';\nimport defaultRules from './rules/defaultRules';\nimport { ValidatorServiceImpl } from './services/validator-service';\nimport { ErrorUtils } from './utils/error-utils';\nvar ValidationComponent = /** @class */ (function (_super) {\n    __extends(ValidationComponent, _super);\n    function ValidationComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.errors = [];\n        return _this;\n    }\n    ValidationComponent.prototype.validate = function (newState, fieldRules) {\n        var _a, _b, _c, _d;\n        if (fieldRules === void 0) { fieldRules = this.props.validation; }\n        this.validatorService = new ValidatorServiceImpl(__assign(__assign({}, this.state), newState), (_a = this.props.locale) !== null && _a !== void 0 ? _a : 'en', // ex: en, fr\n        (_b = this.props.rules) !== null && _b !== void 0 ? _b : defaultRules, (_c = this.props.messages) !== null && _c !== void 0 ? _c : defaultMessages, (_d = this.props.labels) !== null && _d !== void 0 ? _d : {});\n        var result = this.validatorService.validate(fieldRules);\n        this.errors = result.errors;\n        this.isFormValid = result.isValid;\n        this.setState(newState);\n    };\n    ValidationComponent.prototype.isFieldInError = function (fieldName) {\n        return ErrorUtils.isFieldInError(this.errors, fieldName);\n    };\n    ValidationComponent.prototype.getFailedRules = function () {\n        return ErrorUtils.getFailedRules(this.errors);\n    };\n    ValidationComponent.prototype.getFailedRulesInField = function (fieldName) {\n        return ErrorUtils.getFailedRulesInField(this.errors, fieldName);\n    };\n    ValidationComponent.prototype.getErrorMessages = function (separator) {\n        if (separator === void 0) { separator = '\\n'; }\n        return ErrorUtils.getErrorMessages(this.errors, separator);\n    };\n    ValidationComponent.prototype.getErrorsForField = function (fieldName) {\n        return ErrorUtils.getErrorsForField(this.errors, fieldName);\n    };\n    ValidationComponent.prototype.getErrorsInField = function (fieldName) {\n        return ErrorUtils.getErrorsInField(this.errors, fieldName);\n    };\n    return ValidationComponent;\n}(Component));\nexport default ValidationComponent;\n","import useValidation from './use-validation';\nimport ValidationComponent from './ValidationComponent';\nimport defaultMessages from './messages/defaultMessages';\nimport defaultRules from './rules/defaultRules';\nexport { useValidation, defaultMessages, defaultRules };\nexport * from './models/index';\nexport default ValidationComponent;\n","import ValidationComponent, { ClassValidationProps, FormState } from 'react-simple-form-validator';\nimport { Fragment } from 'react';\n\nclass ClassForm extends ValidationComponent<ClassValidationProps, FormState> {\n  constructor(props: ClassValidationProps) {\n    super(props);\n\n    this.state = {\n      civility: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      touchedFields: { civility: false, firstName: false, lastName: false, email: false }\n    };\n  }\n\n  onBlurHandler(event: React.FormEvent<HTMLElement>, field: string): void {\n    this.setState({ touchedFields: { ...this.state.touchedFields, [field]: true } });\n  }\n\n  formSubmitHandler(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    const { civility, email, firstName, lastName } = this.state;\n\n    console.log('Form Values : ', civility, email, firstName, lastName);\n\n    this.setState({\n      civility: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      touchedFields: { civility: false, firstName: false, lastName: false, email: false }\n    });\n  }\n\n  render(): JSX.Element {\n    return (\n      <Fragment>\n        <h2>Class based Form</h2>\n        <form onSubmit={this.formSubmitHandler.bind(this)}>\n          <div className=\"form-control\">\n            <label htmlFor=\"gender\">Civility</label>\n            <input\n              id=\"civility\"\n              type=\"text\"\n              onChange={(e) => this.validate({ civility: e.target.value })}\n              onBlur={(e) => this.onBlurHandler(e, 'civility')}\n              value={this.state.civility}\n              placeholder=\"Seize a civility (Mrs or Ms or Miss)\"\n            />\n            <p className=\"error-text\">\n              {this.state.touchedFields.civility &&\n                this.isFieldInError('civility') &&\n                this.getErrorsInField('civility').join('\\n')}\n            </p>\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              onChange={(e) => this.validate({ email: e.target.value })}\n              onBlur={(e) => this.onBlurHandler(e, 'email')}\n              value={this.state.email}\n              placeholder=\"Seize an email\"\n            />\n            <p className=\"error-text\">\n              {this.state.touchedFields.email &&\n                this.isFieldInError('email') &&\n                this.getErrorsInField('email').join('\\n')}\n            </p>\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"firstName\">First name</label>\n            <input\n              id=\"firstName\"\n              type=\"text\"\n              onChange={(e) => this.validate({ firstName: e.target.value })}\n              onBlur={(e) => this.onBlurHandler(e, 'firstName')}\n              value={this.state.firstName}\n              placeholder=\"Seize a first name\"\n            />\n            <p className=\"error-text\">\n              {this.state.touchedFields.firstName &&\n                this.isFieldInError('firstName') &&\n                this.getErrorsInField('firstName').join('\\n')}\n            </p>\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"astName\">Last Name</label>\n            <input\n              id=\"lastName\"\n              type=\"text\"\n              onChange={(e) => this.validate({ lastName: e.target.value })}\n              onBlur={(e) => this.onBlurHandler(e, 'lastName')}\n              value={this.state.lastName}\n              placeholder=\"Seize a last name\"\n            />\n            <p className=\"error-text\">\n              {this.state.touchedFields.lastName &&\n                this.isFieldInError('lastName') &&\n                this.getErrorsInField('lastName').join('\\n')}\n            </p>\n          </div>\n          <button disabled={!this.isFormValid}>Submit</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default ClassForm;\n","import React, { Fragment, FunctionComponent, useState } from 'react';\nimport { defaultMessages, defaultRules, FieldsToValidate, useValidation } from 'react-simple-form-validator';\n\ninterface FunctionFormProps {\n  validation: FieldsToValidate;\n}\n\nconst FunctionForm: FunctionComponent<FunctionFormProps> = (props) => {\n  const [touchedFields, setTouchedFields] = useState({\n    civility: false,\n    email: false,\n    firstName: false,\n    lastName: false\n  });\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [civility, setCivility] = useState('');\n\n  const { isFieldInError, getErrorsInField, isFormValid } = useValidation({\n    fieldsRules: props.validation,\n    state: { firstName, lastName, email, civility },\n    rules: { ...defaultRules, customCivilityRule: /^(Mrs|Ms|Miss)$/ },\n    messages: {\n      ...defaultMessages,\n      en: { ...defaultMessages['en'], customCivilityRule: 'Civility is incorrect (Mrs/Ms/Miss)' }\n    }\n  });\n\n  const onBlurHandler = (event: React.FormEvent<HTMLElement>, field: string) =>\n    setTouchedFields((prevFields) => ({ ...prevFields, [field]: true }));\n\n  const formSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    console.log('Form values : ', civility, email, firstName, lastName);\n    setFirstName('');\n    setLastName('');\n    setEmail('');\n    setCivility('');\n    setTouchedFields({ firstName: false, lastName: false, email: false, civility: false });\n  };\n\n  return (\n    <Fragment>\n      <h2>Functional Form</h2>\n      <form onSubmit={formSubmitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"gender\">Civility</label>\n          <input\n            id=\"civility\"\n            type=\"text\"\n            onChange={(e) => setCivility(e.target.value)}\n            onBlur={(e) => onBlurHandler(e, 'civility')}\n            value={civility}\n            placeholder=\"Seize a civility (Mrs or Ms or Miss)\"\n          />\n          <p className=\"error-text\">\n            {touchedFields.civility && isFieldInError('civility') && getErrorsInField('civility').join('\\n')}\n          </p>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            onBlur={(e) => onBlurHandler(e, 'email')}\n            value={email}\n            placeholder=\"Seize an email\"\n          />\n          <p className=\"error-text\">\n            {touchedFields.email && isFieldInError('email') && getErrorsInField('email').join('\\n')}\n          </p>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"firstName\">First name</label>\n          <input\n            id=\"firstName\"\n            type=\"text\"\n            onChange={(e) => setFirstName(e.target.value)}\n            onBlur={(e) => onBlurHandler(e, 'firstName')}\n            value={firstName}\n            placeholder=\"Seize a first name\"\n          />\n          <p className=\"error-text\">\n            {touchedFields.firstName && isFieldInError('firstName') && getErrorsInField('firstName').join('\\n')}\n          </p>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"astName\">Last Name</label>\n          <input\n            id=\"lastName\"\n            type=\"text\"\n            onChange={(e) => setLastName(e.target.value)}\n            onBlur={(e) => onBlurHandler(e, 'lastName')}\n            value={lastName}\n            placeholder=\"Seize a last name\"\n          />\n          <p className=\"error-text\">\n            {touchedFields.lastName && isFieldInError('lastName') && getErrorsInField('lastName').join('\\n')}\n          </p>\n        </div>\n        <div className=\"actions\">\n          <button disabled={!isFormValid}>Submit</button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default FunctionForm;\n","import { FunctionComponent } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nimport styles from './Layout.module.css';\n\ninterface LayoutProps {}\n\nconst Layout: FunctionComponent<LayoutProps> = () => {\n  return (\n    <div className={styles.layout}>\n      <header>\n        <h1>React simple form validator</h1>\n        <nav className={styles.nav}>\n          <NavLink to=\"/function-form\" className={({ isActive }) => (isActive ? styles.active : '')}>\n            Functionanl Form\n          </NavLink>\n          <NavLink to=\"/class-form\" className={({ isActive }) => (isActive ? styles.active : '')}>\n            Class Based Form\n          </NavLink>\n        </nav>\n      </header>\n\n      <div className=\"content\">\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { defaultMessages, defaultRules } from 'react-simple-form-validator';\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport ClassForm from './components/ClassForm';\nimport FunctionForm from './components/FunctionForm';\nimport Layout from './layout/Layout';\n\nconst fieldsValidation = {\n  civility: { required: true, customCivilityRule: true },\n  email: { required: true, email: true },\n  firstName: { required: true, minlength: 2, maxlength: 6 },\n  lastName: { required: true }\n};\n\nfunction App() {\n  const rules = { ...defaultRules, customCivilityRule: /^(Mrs|Ms|Miss)$/ };\n  const messages = {\n    ...defaultMessages,\n    en: { ...defaultMessages['en'], customCivilityRule: 'Civility is incorrect (Mrs/Ms/Miss)' }\n  };\n\n  return (\n    <BrowserRouter basename={process.env.REACT_APP_PUBLIC_PATH}>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Navigate replace to=\"/function-form\" />} />\n          <Route path=\"/function-form\" element={<FunctionForm validation={fieldsValidation} />} />\n          <Route\n            path=\"/class-form\"\n            element={<ClassForm rules={rules} messages={messages} validation={fieldsValidation} />}\n          />\n        </Route>\n        <Route path=\"*\" element={<Navigate to=\"/function-form\" />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__2pfh0\",\"nav\":\"Layout_nav__2dq37\",\"content\":\"Layout_content__ZdQLD\",\"active\":\"Layout_active__3w1-q\"};"],"sourceRoot":""}